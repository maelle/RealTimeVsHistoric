{
    "contents" : "######################################################\n# LOAD PACKAGES\n######################################################\nlibrary(\"readr\")\nlibrary(\"lubridate\")\nlibrary(\"dplyr\")\nlibrary(\"Ropenaq\")\nlibrary(\"ggplot2\")\n\n######################################################\n# CHECK LOCATIONS ROPENAQ DELHI PM2.5\n######################################################\nRopenaq::locations(city=\"Delhi\", parameter=\"pm25\")\n# we'll use only the 4 first ones since the first one\n# is US embassy data\nlocationsDelhi <- Ropenaq::locations(city=\"Delhi\", \n                                     parameter=\"pm25\")[1:4,]\n\n######################################################\n# LOAD DATA FROM CPCB\n######################################################\ndataCPCB <- readr::read_csv(\"cpcb_ambient_panel.csv\")\n# change this name for compatibility with Open AQ name\ndataCPCB$station[dataCPCB$station==\"R K Puram\"] <- \"RK Puram\"\n# filter the locations we have with OpenAQ\ndataCPCB <- dplyr::filter(dataCPCB,\n                          station %in% locationsDelhi$location)\n# now off to translating date\n# I am too lazy for finding something more elegant\ndataCPCB$dt_clean <- gsub(\"apr\", \"-04-\", dataCPCB$dt_clean)\ndataCPCB$dt_clean <- gsub(\"may\", \"-05-\", dataCPCB$dt_clean)\ndataCPCB$dt_clean <- gsub(\"jun\", \"-06-\", dataCPCB$dt_clean)\ndataCPCB$dt_clean <- gsub(\"jul\", \"-07-\", dataCPCB$dt_clean)\ndataCPCB$dt_clean <- gsub(\"aug\", \"-08-\", dataCPCB$dt_clean)\ndataCPCB$dt_clean <- gsub(\"sep\", \"-09-\", dataCPCB$dt_clean)\ndataCPCB$dt_clean <- gsub(\"oct\", \"-10-\", dataCPCB$dt_clean)\ndataCPCB$dt_clean <- gsub(\"nov\", \"-11-\", dataCPCB$dt_clean)\ndataCPCB$dt_clean <- gsub(\"dec\", \"-12-\", dataCPCB$dt_clean)\ndataCPCB <- dplyr::mutate(dataCPCB,\n                          dateLocal=lubridate::dmy_hms(dt_clean))\n# name the column differently\ndataCPCB <- dplyr::mutate(dataCPCB,\n                          historicValue=reading_value)\n# drop useless columns\ndataCPCB <- dplyr::select(dataCPCB,\n                          - dt_clean,\n                          - date_r,\n                          - monitor_read,\n                          - reading_value)\n\n######################################################\n# NOW GET OPENAQ DATA\n######################################################\n# dataOpenAQ <- NULL\n# for (i in 1:length(locationsDelhi)){\n#   firstUpdated <- locationsDelhi[i,]$firstUpdated\n#   locationURL <- locationsDelhi[i,]$locationURL\n#   \n#   seqDays <- seq(from=lubridate::ymd(format(firstUpdated, \"%Y-%m-%d\")),\n#                  to=lubridate::ymd(\"2015-12-31\"),\n#                  by=\"1 day\")\n#   seqDays <- format(seqDays, \"%Y-%m-%d\")\n#   for(i in 1:(length(seqDays)-1)){\n#     dataOpenAQTemp <- try(Ropenaq::measurements(location=locationURL,\n#                                                      parameter=\"pm25\",\n#                                                      limit=1000,\n#                                                      date_from=seqDays[i],\n#                                                      date_to=seqDays[i+1]), silent=TRUE)\n#     print(seqDays[i])\n#     \n#     if(class(dataOpenAQTemp)[1]!=\"try-error\"){\n#       dataOpenAQ <- rbind(dataOpenAQ,\n#                                dataOpenAQTemp)\n#     }\n#     \n#   }\n#   \n# \n# }\n# # might be useful later\n# dataOpenAQ <- unique(dataOpenAQ)\n# save(dataOpenAQ, file=\"dataOpenAQ.RData\")\n# write.table(dataOpenAQ, row.names=FALSE, file=\"dataOpenAQ.csv\",\n#             sep=\",\")\nload(\"dataOpenAQ.RData\")\n\n######################################################\n# NOW PUT IT IN SHAPE\n######################################################\ndataOpenAQ <- dplyr::mutate(dataOpenAQ,\n                            valueOpenAQ=value,\n                            station=location)\ndataOpenAQ <- dplyr::select(dataOpenAQ,\n                            dateLocal,\n                            station,\n                            valueOpenAQ)\n\n######################################################\n# EXPLORATION\n######################################################\nfor (station in levels(as.factor(dataOpenAQ$station))){\n  print(station)\n  minDate <- min(dataOpenAQ$dateLocal[dataOpenAQ$station==station])\n  dataTempCPCB <- dataCPCB[dataCPCB$station==station&\n                         dataCPCB$dateLocal>=minDate,]\n  maxDate <- max(dataTempCPCB$dateLocal)\n  dataTempOpenAQ <- dataOpenAQ[dataOpenAQ$station==station&\n                                 dataOpenAQ$dateLocal<=maxDate]\n  p <- ggplot() + \n    geom_point(data=dataOpenAQ,\n              aes(x=dateLocal, y=valueOpenAQ),\n              col=\"purple\")+ \n    geom_point(data=dataTempCPCB,\n              aes(x=dateLocal, y=historicValue),\n              col=\"blue\")+\n    ggtitle(station)\n  ggsave(p, file=paste0(station,\".png\"))\n}\n",
    "created" : 1453491745791.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "114257689",
    "id" : "1F0CC34E",
    "lastKnownWriteTime" : 1453498448,
    "path" : "D:/RealTimeVsHistoric/real_time_vs_historic.R",
    "project_path" : "real_time_vs_historic.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}